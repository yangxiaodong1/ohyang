# 两个人的Senario[业务逻辑]
## 两个人在200米以外（不考虑）
## 两个人在200米以内
  - 两个人硬件都没有开启（不考虑）
  - 两个人硬件只有一个开启的
    - 没开启硬件的人没有开启APP（不考虑）
    - 没开启硬件的人开启APP
      - 开启偶遇模式
        - 偶遇
  - 两个人硬件都开启
    - 两个人的手机APP没有开启（不考虑）
    - 两个人的手机APP只有一个开启
      - 开启偶遇模式
        - 偶遇
    - 两个人手机APP均开启
      - 配对



- 偶遇流程一
    - 选择条件（有默认条件）(有哪些条件?)
    - 开启偶遇模式（每分钟扫描一次，时间可以讨论，很费电的）
    - 不断发现附近开启硬件并满足条件的人，记录下来（可以以列表的形式展示，最多显示20位最新的偶遇）
    - 选择希望偶遇的同伴
    - 等待对方接受偶遇
    - 对方同意，则约见（双方不同时在线，如何约见?）；
    - 成功约见
    - 加好友（两个人都同意）
    - 偶遇结束
- 偶遇流程二
    - 选择条件（有默认条件）
    - 开启偶遇模式（每分钟扫描一次，时间可以讨论，很费电的）
    - 不断发现附近开启硬件并满足条件的人，记录下来（可以以列表的形式展示，最多显示20位最新的偶遇）
    - 设置下次偶遇留言
    - 如果能再次偶遇，等待对方接受偶遇； 否则结束
    - 对方同意，则约见（双方不同时在线，如何约见?）；
    - 成功约见
    - 加好友（两个人都同意）
    - 偶遇结束
- 配对流程
    - 选择条件（有默认条件）
    - 开始查找
    - 展示结果
    - 选择有兴趣的同伴
    - 等待对方接受配对（两个人开始联系）
    - 对方同意，则约见；不同意，配对下一位，直到遇到可以约见的
    - 成功约见
    - 加好友（两个人都同意）
    - 配对结束


# 主要的问题
- 是否需要配对历史记录（如果没有配对黑名单，有用，否则意义不大）?
- 是否是配对黑名单（如果此次不接受配对，双方以后再也不会配对到）?
- 手机APP多长时间搜索一次硬件数据（偶遇）?
- 实时搜索，还是在一个时间段内相遇比较近的人员， 配对时记录当前的GPS定位坐标OR打开软件后不停的记录坐标（倾向于前者）?
- 非实时搜索，如何约见?
- 硬件的状态具体如何定义?
- 数据库是否存放缩略图?
- 登录时缓存数据问题
  - 按手机不同
  - 是否有缓存
  - 手机上有旧的缓存（登录时如何获取最新数据：登录时全部获取，用到时获取,利用时间戳）
- 是否保存聊天信息?




# 主要流程的字段
## 手机连接硬件

  - 手机号与用户（不考虑）
  - 手机号与硬件（不考虑）
  - 硬件与用户

  - 手机号(唯一性）
    - 手机信息
      - created_at
      - 区号(string, 4位?)
      - 手机号(string, 11位)
      - 手机型号(string, 50)
      - 手机类型(string, 50)
      - 手机系统(string, 50)
      - 手机mac(string, 12)

  - 硬件身份ID(唯一性)
    - 硬件信息
      - 工厂信息
      - 型号
      - mac地址
      - UUID
      - 应用ID(string, 50)
      - 身份ID(string, 50)
      - RSSI(int)（变化的数据）
      - TX-POWER(int)
      - 感知距离(float)（变化的数据）
    > 绑定之前可以验证硬件是否合法（防伪)

## 登录和注册
  - 注册
    - 必填项
      - 用户名(string, 50)
      - 密码(string, 100)
      - 手机号(string, 11)
    - 选填项
      - created_at
      - changed_at
      - 头像(image)
      - 性别(int)
      - 身份证（string, 18)
      - 真实姓名(string, 64)
      - 邮箱(string, 128)
      - 昵称(string, 64)
      - 出生日期(string, 10)
      - 身高(float)
      - 体重(float)
      - 婚姻状态(int)
      - 家乡(string, 100)
      - 所在地(string, 100)
      - 住址(string, 100)
      - 性取向(int)
      - 血型(int)
      
      - 爱好
        - 喜欢的内容
          - 书籍
          - 电影
          - 音乐
        - 兴趣
          - 生活
          - 美食
          - 旅游
          - 运动
          - 宠物
          - 其它
      - 体型(int)
      - smoke(int)
      - drink(int)
      - 职业(int)
      - 工作内容(int)

      - 公司
        - 名称(string 50)
        - 职位(int)

      - 学校
        - 名称(int)
        - 学历(int)
        - 专业(string, 100)
        - 入学年份(string, 10)
        - 毕业年份(string, 10)

  - 登录
    - 用户名(string, 50)
    - 密码(string, 100)


## IM
  - 网易IM云
    - url
        - http://dev.netease.im/docs/product/IM%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF/%E6%9C%8D%E5%8A%A1%E7%AB%AFAPI%E6%96%87%E6%A1%A3

    - IM用户表
      - created_at
      - accid(用户ID)
      - token(string, 128, IM的密码)
      - type(登录类型,1:移动端, 2:PC端, 3:两端同时)
      - status(bool)

    - IM用户关系
      - created_at
      - accid
      - friend_accid
      - type(1好友，2黑名单)
      - 备注
      - state(1存在，2不存在，即软删除)

    - IM用户请求关系
      - created_at
      - changed_at
      - accid
      - friend_accid
      - type(1直接加好友，2请求加好友，3同意加好友，4拒绝加好友)
